// 引入腾讯地图SDK核心类
const QQMapWX = require('../../../../pages/common/lib/qqmap-wx-jssdk.min.js');
var qqmapsdk;
//全局配置
const common = require('../../../../common.js');
//获取APP
const app = getApp();
//定位的门店地址、距离信息
var locationStore = [];
//需要计算的距离纬度经度
var latLng = [];
//所有门店信息
let stores;
//定时执行时间
var timer = null;
Page({

  /**
   * 页面的初始数据
   */
  data: {
    techNODefault: '',
    typeDefault: 0,
    typeLists: [
      { id: 1, name: 'SPA' }, { id: 2, name: '中医' }, { id: 3, name: '泰式' },
      { id: 4, name: '普足' }, { id: 5, name: '按摩理疗' },
    ],
    maskDisplay: 'none',
  },

  onLoad: function (options) {
    if (options.wd) {
      this.setData({ techNODefault: options.wd })
      wx.request({
        url: "https://www.slovty.cn/index.php/Home/Test/minaresponse",
        data: { "word": options.wd },
        header: {
          'content-type': 'application/json'
        },
        success: function (res) {
          console.log(res)
        }
      })
    }

    // 实例化腾讯地图API核心类
    qqmapsdk = new QQMapWX({
      key: common.config.QQMapWXKey
    });

    //定位缓存大于1小时就删除缓存
    var currStoreCache = wx.getStorageSync('currentReserveStore');

    if (currStoreCache) {
      var currTime = new Date().getTime() - 3600000;
      if (currStoreCache[0].cache < currTime) {
        wx.removeStorageSync('currentReserveStore');
      }
    }
  },
  typeSelect: function (e) {
    this.setData({
      typeDefault: e.target.dataset.id
    })
    // console.log(this.data.typeLists[0])
    // console.log(typeof (this.data.typeLists[0]))
  },

  toproject: function (e) {
    wx.navigateTo({
      url: '../techproject/techproject',
    })
  },
  bindfocus: function () {
    wx.redirectTo({
      url: '../techsearch/techsearch',
    })
  },

  onShareAppMessage: function () {
    return {
      title: '客源无忧微信营销平台'
    }
  },

  /**
   * 预约table选项卡导航跳转
   */
  onlineReserevTabJump: function (ev) {
    wx.redirectTo({
      url: ev.currentTarget.dataset.url,
    });
  },
  /**
   * 点击预约选中预约项
   */
  reserveBtn: function (ev) {
    var idx = ev.currentTarget.dataset.idx;
    this.setData({
      iconHide: 'display:block',
      reserveBtnHide: 'display:none',
      hideIdx: idx
    });
  },
  /**
   * 点击立即预约显示选择时间
   */
  reserveBtnTime: function () {
    this.setData({
      showSelectTime: 'showIn',
      maskDisplay: 'block'
    });
  },
  /**
   * 点击关闭选择时间
   */
  closeStime: function () {
    this.setData({
      maskDisplay: 'none',
      showSelectTime: 'showOut'
    });
  },

  /**
   * 跳转确认下单页
   */
  confirmBtn: function () {
    var _this = this;
    wx.navigateTo({
      url: '/pages/reserve/pages/room-order-confirm/room-order-confirm',
      success: function () {
        _this.setData({
          maskDisplay: 'none',
          showSelectTime: 'showOut'
        });
      }
    });
  },
  /**
   * 点击切换门店
   */
  changeStoreBtn: function () {
    wx.navigateTo({
      url: '/pages/reserve/pages/select-store/select-store',
    })
  },

  /**
  * 监听页面显示事件
  */
  onShow: function () {
    let _this = this;
    locationStore = wx.getStorageSync('currentReserveStore');
    console.log(locationStore);
    if (locationStore) {
      _this.setData({
        locationStore: locationStore
      });
    } else {
      _this.getStores().then(
        function (data) {
          //获取定位
          new Promise(function (resolve, reject) {
            locationStore = [];
            for (let i = 0; i < stores.length; i++) {
              var address = stores[i].province + stores[i].city + stores[i].area + stores[i].address_detail;
              if (stores[i].latitude) {
                qqmapsdk.calculateDistance({
                  mode: 'driving',
                  to: [{
                    latitude: stores[i].latitude,
                    longitude: stores[i].longitude
                  }],
                  success: function (res) {
                    locationStore.push({
                      'store_name': stores[i].store_name,
                      'address': address == '' ? '未设置地址' : address,
                      'tel': stores[i].tel,
                      'distance': (res.result.elements[0].distance / 1000).toFixed(2) + 'km',
                      'store_img': stores[i].store_img == '' ? common.config.bannerImg : common.config.showImgUrl + stores[i].store_img.split(',')[0],
                      'nodeid': stores[i].request_id
                    });
                    resolve(locationStore);
                  },
                  fail: function (res) {
                    locationStore.push({
                      'store_name': stores[i].store_name,
                      'address': address == '' ? '未设置地址' : address,
                      'tel': stores[i].tel,
                      'distance': '未知',
                      'store_img': stores[i].store_img == '' ? common.config.bannerImg : common.config.showImgUrl + stores[i].store_img.split(',')[0],
                      'nodeid': stores[i].request_id
                    });
                    resolve(locationStore);
                  },
                  complete: function (res) {
                  }
                });

              } else {
                locationStore.push({
                  'store_name': stores[i].store_name,
                  'address': address == '' ? '未设置地址' : address,
                  'tel': stores[i].tel,
                  'distance': '未知',
                  'store_img': stores[i].store_img == '' ? common.config.bannerImg : common.config.showImgUrl + stores[i].store_img.split(',')[0],
                  'nodeid': stores[i].request_id
                });
                resolve(locationStore);
              }
            }
          }).then(function (data) {
            clearTimeout(timer);
            timer = setTimeout(function () {
              locationStore.sort(function (obj1, obj2) {
                var val1 = obj1.distance;
                var val2 = obj2.distance;
                if (val1 < val2) {
                  return -1;
                } else if (val1 > val2) {
                  return 1;
                } else {
                  return 0;
                }
              });

              //赠加缓存时间
              for (let i = 0; i < locationStore.length; i++) {
                locationStore[i]['cache'] = new Date().getTime();
              }

              wx.setStorageSync('currentReserveStore', locationStore);
              _this.setData({
                locationStore: locationStore
              });
            }, 1000);
          });
        }
      ).catch(function (reason) {
        wx.showModal({
          title: '提示',
          content: '获取门店信息失败',
          showCancel: false
        });
      });
    }
  },

  /**
   * 地理位置
   */
  location: function () {
    wx.getSetting({
      success(res) {
        wx.showLoading({
          title: '加载中',
          mask: true
        });
        if (!res.authSetting['scope.userLocation']) {
          wx.authorize({
            scope: 'scope.userLocation',
            success(res) {
              // 用户已经同意
              qqmapsdk.geocoder({
                address: locationStore[0].address,
                success: function (res) {
                  wx.hideLoading();
                  if (res.status == 0) {
                    wx.openLocation({
                      latitude: res.result.location.lat,
                      longitude: res.result.location.lng,
                      name: locationStore[0].store_name,
                      address: locationStore[0].address
                    });
                  } else {
                    wx.showModal({
                      title: '提示',
                      content: '地址解码失败',
                      showCancel: false
                    });
                  }
                },
                fail: function (res) {
                  wx.hideLoading();
                  wx.showModal({
                    title: '提示',
                    content: '地址解码失败',
                    showCancel: false
                  });
                }
              });
            },
            fail: function () {
              wx.hideLoading();
              wx.showModal({
                title: '提示',
                content: '已拒绝使用地理位置，现在去设置允许使用地理位置',
                success: function (res) {
                  if (res.confirm) {
                    wx.openSetting({
                      success: (res) => {
                        if (res.authSetting['scope.userLocation']) {
                          wx.showLoading({
                            title: '加载中',
                            mask: true
                          });
                          qqmapsdk.geocoder({
                            address: locationStore[0].address,
                            success: function (res) {
                              wx.hideLoading();
                              if (res.status == 0) {
                                wx.openLocation({
                                  latitude: res.result.location.lat,
                                  longitude: res.result.location.lng,
                                  name: locationStore[0].store_name,
                                  address: locationStore[0].address
                                });
                              } else {
                                wx.showModal({
                                  title: '提示',
                                  content: '地址解码失败',
                                  showCancel: false
                                });
                              }
                            },
                            fail: function (res) {
                              wx.hideLoading();
                              wx.showModal({
                                title: '提示',
                                content: '地址解码失败',
                                showCancel: false
                              });
                            }
                          });
                        }
                      }
                    })
                  }
                }
              });
            }
          });
        } else {
          wx.showLoading({
            title: '加载中',
            mask: true
          });
          qqmapsdk.geocoder({
            address: locationStore[0].address,
            success: function (res) {
              wx.hideLoading();
              if (res.status == 0) {
                wx.openLocation({
                  latitude: res.result.location.lat,
                  longitude: res.result.location.lng,
                  name: locationStore[0].store_name,
                  address: locationStore[0].address
                });
              } else {
                wx.showModal({
                  title: '提示',
                  content: '地址解码失败',
                  showCancel: false
                });
              }
            },
            fail: function (res) {
              wx.hideLoading();
              wx.showModal({
                title: '提示',
                content: '地址解码失败',
                showCancel: false
              });
            }
          });
        }
      }
    });
  },

  /**
   * 获取所有门店信息
   */
  getStores: function () {
    var p = new Promise(function (resolve, reject) {
      //获取所有门店信息
      wx.request({
        url: common.config.host + '/index.php/Api/Base/getStores',
        data: {
          'authorizerId': app.globalData.authorizerId,
          'geocoder': 1
        },
        method: 'POST',
        header: {
          'content-type': 'application/json'
        },
        success: function (res) {
          //返回成功
          if (res.statusCode == 200) {
            if (res.data.status == 1) {
              stores = res.data.info;
              resolve(stores);
            } else {
              reject(res.data.info);
            }

          } else {
            reject('请求失败');
          }
        }
      });
    });
    return p;
  }
})